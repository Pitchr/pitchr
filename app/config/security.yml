# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

# todo: redireger sur le referer si connexion
        main:
            pattern:        ^/
            anonymous:      true
            provider: fos_userbundle
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                target_path_parameter: _target_path
                use_referer: true
                csrf_token_generator: security.csrf.token_manager
            # #                success_handler: authentication_handler
            # #                failure_handler: authentication_handler
            logout:
                path:       fos_user_security_logout
                target:     /login
            remember_me:
                secret:     %secret%

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            form_login:
                check_path:               /api/login_check
                username_parameter:       username
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api_doc:
            pattern: ^/api/doc
            security: false

        api:
            pattern:   ^/api
            stateless: true
            provider: fos_userbundle
            lexik_jwt:
                authorization_header: # check token in Authorization Header
                    enabled: true
                    prefix:  Bearer
                    name:    Authorization
                cookie:               # check token in a cookie
                    enabled: true
                    name:    BEARER
                query_parameter:      # check token in query string parameter
                    enabled: true
                    name:    bearer
                throw_exceptions:        false     # When an authentication failure occurs, return a 401 response immediately
                create_entry_point:      true      # When no authentication details are provided, create a default entry point that returns a 401 response
                authentication_provider: lexik_jwt_authentication.security.authentication.provider
                authentication_listener: lexik_jwt_authentication.security.authentication.listener

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/pitch, roles: ROLE_USER }
        - { path: ^/comment, roles: ROLE_USER }


    encoders:
        UserBundle\Entity\User:
            algorithm: bcrypt
            cost: 13
